1. Compiling
- Precompile(전처리) : C소스 코드는 전처리기에 실질적인 컴파일이 이루어지기 전에 무언가를 실행하라고 알려준다.
예를 들어 #include는 전처리기에게 다른 파일의 내용을 포함시키라고 알려주는 것이다.
- Compile : 컴파일러라고 불리는 프로그램이 C코드를 어셈블리어라는 저수준 프로그래밍 언어로 컴파일한다.
- Assemble : 어셈블리 코드를 오브젝트 코드로 변환시킨다. 연속된 0과 1들로 바꿔준다.
- Link : 프로그램이 여러 개의 파일(cs50.h와 같은 라이브러리 포함)로 이루어져 있어 하나의 오브젝트 파일로 합쳐져야 한다면 링크라는 단계가 필요하다.
링커는 여러 개의 다른 오브젝트 코드 파일을 실행 가능한 하나의 오브젝트 코드 파일로 합쳐준다.

2. Debugging
- help50
- printf
- debug50 : 소스코드에 브레이크 포인트를 지정하고 컴파일한 후에 "debug50 파일명"으로 실행.
(디버깅 종료는 Ctrl + c)

3. Design of Code
- check50
- style50

4. Array(1)
컴퓨터 안에 있는 RAM이라는 물리적 칩이 메모리 역할을 하는데 이 곳에 변수의 값이 저장된다.

5. Array(2)
전역변수 : N이 고정된 값(상수)라면 그 값을 선언할 때 const를 앞에 붙여준다. 전역 변수의 이름은 대문자로 표기한다.

6. 문자열과 배열
string은 char 자료형의 데이터들의 배열이다. string s = "HI!";과 같이 문자열 s가 정의되어 있을 때,
s는 문자의 배열이기 때문에 메모리상에 저장되고 가장 끝에는 널 종단 문자인 "\0"가 저장된다.

7. 문자열의 활용
문자열의 길이 및 탐색 - for문 사용 or strlen()함수 사용 -> <string.h>필요
문자열 탐색 및 수정(대문자로 바꿔주는 프로그램) - for문으로 아스키값 비교 or toupper()함수 사용 -> <string.h>필요

8. 명령행 인자
main(int argc, string argv[]) - argc는 main함수가 받게 될 입력의 개수, argv[]는 그 입력이 포함되어 있는 배열이다.
argv[]는 string 배열, argv[0]에는 기본적으로 프로그램의 이름으로 저장된다.
