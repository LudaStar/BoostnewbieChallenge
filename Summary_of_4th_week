1. 검색 알고리즘
선형 검색 : 배열의 인덱스를 처음부터 끝까지 하나씩 증가시키면서 방문하여 그 값이 속하는지 검사
이진 검색 : 배열이 정렬되었을 때, 배열 중간 인덱스부터 시작하여 찾고자하는 값과 비교하여 인덱스로 이동을 반복

2. 알고리즘 표기법
Big O 표기법 : 실행시간의 상한을 나타낸다
- O(n^2) -> 버블 정렬, 선택 정렬
- O(n log n) -> 병합 정렬
- O(n) -> 선형 검색
- O(log n) -> 이진 검색
- O(1)

Big Ω 표기법 : 알고리즘 실행시간의 하한을 나타낸다
- Ω(n^2) -> 버블 정렬, 선택 정렬
- Ω(n log n) -> 병합 정렬
- Ω(n) -> 배열 안에 존재하는 값의 개수 세기, 버블 정렬(이미 정렬된 리스트가 주어짐)
- Ω(log n)
- Ω(1) -> 선형 검색, 이진 검색

3. 선형 검색
선형 검색 알고리즘은 정확하지만 아주 효율적이지 못한 방법
자료가 정렬되어 있지 않거나 그 어떤 정보도 없어 하나씩 찾아야 하는 경우에 유용
(number.c, name2.c, phonebook.c)

4. 버블 정렬
두 개의 인접한 자료 값을 비교하면서 위치를 교환하는 방식으로 정렬하는 방법
가장 큰 숫자 먼저 정렬되고 점차 작은 숫자들이 정렬

5. 선택 정렬
배열 안의 자료 중 가장 작은 수를 찾아 첫 번째 위치의 수와 교환해주는 방식의 정렬
교환 횟수를 최소화하지만 각 자료를 비교하는 횟수는 증가

6. 정렬 알고리즘의 실행시간

7. 재귀
함수가 본인 스스로를 호출해서 사용
중첩 루프를 사용하지 않고도 하나의 함수로 동일한 작업을 수행
iteration.c, recursion.c

8. 병합 정렬
원소가 한 개가 될 때까지 계속해서 반으로 나누다가 다시 합쳐나가며 정렬을 하는 방식
